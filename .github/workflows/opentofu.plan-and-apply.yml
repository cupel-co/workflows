name: Plan and Apply

on:
  workflow_call:
    inputs:
      apply-args:
        description: Additional arguments to pass to the tofu apply command.
        required: false
        type: string
      artifact-name:
        description: The name of the artifact to upload after the plan step.
        required: true
        type: string
      environment:
        description: The target environment where the apply operation will be executed (e.g., staging, production).
        required: true
        type: string
      init-args:
        description: Additional arguments to pass to the tofu init command.
        required: false
        type: string
      oidc-role-arn:
        description: The ARN of the OIDC role to assume for AWS credentials.
        required: true
        type: string
      plan-args:
        description: Additional arguments to pass to the tofu plan command.
        required: false
        type: string
      region:
        description: The AWS region to use for the plan operation.
        required: true
        type: string
      use-primary-backend:
        description: Specifies whether to use the primary backend during initialization.
        default: 'true'
        required: false
        type: string
      version:
        description: The version of OpenTofu to install.
        default: 1.8.1
        required: false
        type: string
      working-directory:
        description: The directory where the infrastructure code is located.
        default: ./infrastructure
        required: false
        type: string
      workspace:
        description: The workspace to select or create during the plan process.
        required: true
        type: string
    secrets:
      apply-args:
        description: Additional arguments that contain secret values that need to be passed to the apply command.
        required: false
      google-chat-webhook-url:
        description: The Webhook URL for the chat to send the message to
        required: false
      init-args:
        description: Additional arguments to pass to the tofu init command.
        required: false
      plan-args:
        description: Additional arguments to pass to the tofu plan command.
        required: false

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: '${{ inputs.oidc-role-arn }}'
          aws-region: '${{ inputs.region }}'
      - name: Plan
        uses: cupel-co/actions/.github/actions/opentofu/plan@v0.23.4
        with:
          init-args: '${{ inputs.init-args }} ${{ secrets.init-args }}'
          plan-args: '${{ inputs.plan-args }} ${{ secrets.plan-args }}'
          use-primary-backend: '${{ inputs.use-primary-backend }}'
          version: '${{ inputs.version }}'
          working-directory: '${{ inputs.working-directory }}'
          workspace: '${{ inputs.workspace }}'
      - name: 'Upload ${{ inputs.artifact-name }}'
        uses: cupel-co/actions/.github/actions/artifact/upload@v0.23.4
        with:
          name: '${{ inputs.artifact-name }}'
          path: '${{ inputs.working-directory }}'
          retention-days: 1
  apply:
    name: Apply
    runs-on: ubuntu-latest
    environment: '${{ inputs.environment }}'
    needs:
      - plan
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: '${{ inputs.oidc-role-arn }}'
          aws-region: '${{ inputs.region }}'
      - name: 'Download ${{ inputs.artifact-name }}'
        uses: cupel-co/actions/.github/actions/artifact/download@v0.23.4
        with:
          name: '${{ inputs.artifact-name }}'
          path: './'
      - name: Apply
        uses: cupel-co/actions/.github/actions/opentofu/apply@v0.23.4
        with:
          apply-args: '${{ inputs.apply-args }} ${{ secrets.apply-args }}'
          version: '${{ inputs.version }}'
      - name: 'Delete ${{ inputs.artifact-name }}'
        if: always()
        uses: cupel-co/actions/.github/actions/artifact/delete@v0.23.4
        with:
          name: '${{ inputs.artifact-name }}'
  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs:
      - apply
    steps:
      - name: Apply
        uses: cupel-co/actions/.github/actions/notify/deployment@v0.23.4
        with:
          environment: '${{ inputs.environment }}'
          google-chat-webhook-url: '${{ secrets.google-chat-webhook-url }}'
          subtitle: 'Workspace: ${{ inputs.workspace }}'
